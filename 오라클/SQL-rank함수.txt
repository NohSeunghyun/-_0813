예)급여 상위3명 조회
--방법1-union all 사용
select *
from (select ename, salary
	  from employee
	  where dno=10
	  union all
	  select ename, salary
	  from employee
	  where dno=20
	  union all
	  select ename, salary
	  from employee
	  where dno=30
	  order by 2 desc, 1)
where rownum < 4;

--방법2-rank함수 사용
select ename, salary, rank() over(order by salary desc) as "급여 순위"
from employee; --where절을 빼면 순위를 메겨 값이 출력되나 문제인 급여 상위 3명 출력은 아니다.
--where rownum<4; --where절을 추가할 시 값이 입력순서(insert)대로 위에서 세개 출력한다. 원하는 급여상위3명출력이 아니다.
--★이 쿼리문은 where절 상위3명 먼저 출력 후 select절의 랭크함수로 순위를 메기므로 작업수행순서가 잘못되어 값이 이상하게 나온다.

--방법2-★문제점 해결
select *
from (select ename, salary, rank() over(order by salary desc) as "급여 순위"
	  from employee)
where rownum < 4;--작업수행순서를 바꾸어 진행하면 원하는 상위3명을 출력하는 값이 나온다.

========================================================================================================

--★추가- 중복된 등수가 있을시  ex)만약 1등 salary=1800은 2명 2등 salary=1370은 3명 3등 salary=1300은 2명 이라면 -- 데이터변경으로인해 다른사람과 다름
--방법1
select ename, salary, commission,
rank() over(order by salary desc) as "급여 순위-1",--1,1,3,3,3,6,6 나옴
dense_rank() over(order by salary desc) as "급여 순위-2",--1,1,2,2,2,3,3, 으로됨 --dense는 동일한 순위를 하나의 건수로 취급(=하나의 순위로 취급)
rank() over(order by salary desc, commission desc) as "급여 순위-3" --급여가 같다면 순위가 중복되지 않도록 하기위해 커미션이 높은 사람을 위로 올려 중복을 제거한다
--							    만약 커미션이 같다면 또 다시중복;
from employee;

--방법2 row_number사용 이것이 간결함
select ename, salary,
row_number() over(order by salary desc) as "급여 순위"
from employee; --자동으로 중복을 제거하여 1,2,3,4,5,6,7로 나옴 무엇을 기준으로 중복을 나눈건지는 모르겠음
--		찾아보니 eno(employee의 맨 처음 생성한 컬럼이자 primary key)를 오름차순정렬하여 2차 기준으로 잡은거같음
